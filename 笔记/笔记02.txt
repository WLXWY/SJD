//优先考虑的问题，就是管理数据
//编写模版
//vue的工作就是把提供给它的数据和模版渲染出来
         
        //mvvm 框架
        //m Model
        //v View
        //vm ViewModel

        //简化项目
        //方便维护
        //考虑数据

用框架的好处
1、代码量少了
2、维护方便了
3、业务逻辑更清晰了

vue指令
一、双向和单项绑定
1、v-model 双向绑定指令（用它绑定的变量，既可以展示那个变量，也可以改变那个变量
2、{{}}  插值表达式 （它只是用来输出展示的，单项绑定）
3、v-bind  单项绑定（可以绑定到html的任意一个属性上）
4、v-html  绑定html元素
5、v-text  绑定文本

二、列表渲染
v-for="循环表达式" 
 <div v-for="循环的项目 in 要循环的数组或对象"></div>
 如果要获取数组的下标或者对象的key值
 <div v-for="（对应的内容,下标或key值)in 要循环的数组或对象"></div>
如果循环的是数组，没有第三个参数
如果循环的是一个对象，第三个参数就是下标，对象的下标（这是vue生成的）

三、条件渲染
1、v-show  显示和隐藏
   style display
   <div v-show="true/变量"></div>  显示 
   <div v-show="false/变量"></div>  隐藏 
2、v-if    是否存在
  html元素要不要存在dom里面
  <div v-if="true/变量"></div>  dom里面存在该元素 (添加元素)
  <div v-if="true/变量"></div>  dom里面不存在该元素（删除元素）
  也可以添加表达式 v-if="input == 1"

  v-if   元素较多且不需要频繁展示时使用，减少消耗内存，性能较好
  v-show 如果元素需要频繁地显示和隐藏
